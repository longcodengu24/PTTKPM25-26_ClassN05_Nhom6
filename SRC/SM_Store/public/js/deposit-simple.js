// Global variable
var currentTransactionId = null;
var selectedAmount = null;
var autoCheckInterval = null; // Interval cho auto-check
var initialCoins = 0; // L∆∞u s·ªë coins ban ƒë·∫ßu ƒë·ªÉ so s√°nh

document.addEventListener("DOMContentLoaded", function () {
    var customAmountInput = document.getElementById("customAmount");
    var amountBtns = document.querySelectorAll(".amount-btn");
    var submitBtn = document.getElementById("submitBtn");

    console.log("‚úÖ Deposit page loaded");
    console.log("Found buttons:", amountBtns.length);

    // Click v√†o n√∫t g√≥i n·∫°p
    for (var i = 0; i < amountBtns.length; i++) {
        amountBtns[i].onclick = function () {
            var amount = parseInt(this.getAttribute("data-amount"));
            selectedAmount = amount;
            customAmountInput.value = amount.toLocaleString("vi-VN");

            console.log("Selected amount:", amount);

            // Reset t·∫•t c·∫£ n√∫t
            for (var j = 0; j < amountBtns.length; j++) {
                amountBtns[j].classList.remove(
                    "bg-yellow-200",
                    "border-yellow-400",
                    "shadow-lg"
                );
                amountBtns[j].classList.add("bg-white/60", "border-yellow-200");
            }

            // Highlight n√∫t ƒë∆∞·ª£c ch·ªçn
            this.classList.remove("bg-white/60", "border-yellow-200");
            this.classList.add(
                "bg-yellow-200",
                "border-yellow-400",
                "shadow-lg"
            );
        };
    }

    // Click n√∫t n·∫°p ti·ªÅn
    submitBtn.onclick = function () {
        console.log("üöÄ Submit button clicked!");

        var amount =
            selectedAmount ||
            parseInt(customAmountInput.value.replace(/,/g, ""));

        if (!amount || amount < 10000) {
            alert("Vui l√≤ng ch·ªçn ho·∫∑c nh·∫≠p s·ªë ti·ªÅn (t·ªëi thi·ªÉu 10,000ƒë)");
            return;
        }

        console.log("Amount to deposit:", amount);

        // L·∫•y coins hi·ªán t·∫°i tr∆∞·ªõc khi n·∫°p
        fetch("/api/payment/status", {
            method: "GET",
            headers: {
                "Content-Type": "application/json",
                Accept: "application/json",
            },
        })
            .then(function (response) {
                return response.json();
            })
            .then(function (statusData) {
                if (statusData.success) {
                    initialCoins = statusData.coins || 0;
                    console.log("üí∞ Initial coins:", initialCoins);
                }

                // Sau ƒë√≥ m·ªõi t·∫°o deposit request
                return fetch("/api/payment/create", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        Accept: "application/json",
                    },
                    body: JSON.stringify({
                        amount: amount,
                        user_id: document.getElementById("user_id").value,
                    }),
                });
            })
            .then(function (response) {
                console.log("Response status:", response.status);
                return response.json();
            })
            .then(function (data) {
                console.log("Response data:", data);

                if (data.success) {
                    showPaymentModal(data.data);
                } else {
                    alert("‚ùå Error: " + data.message);
                }
            })
            .catch(function (error) {
                console.error("Error:", error);
                alert("C√≥ l·ªói x·∫£y ra: " + error.message);
            });
    };
});

// Function to show payment modal with QR code
function showPaymentModal(data) {
    console.log("üéØ Showing payment modal:", data);

    var modal = document.getElementById("paymentModal");
    var paymentInfo = document.getElementById("paymentInfo");

    if (!modal || !paymentInfo) {
        console.error("Modal elements not found!");
        return;
    }

    // Build HTML content
    var html = '<div class="text-left">';

    // M√£ giao d·ªãch - kh√¥ng c·∫ßn hi·ªÉn th·ªã n·ªØa v√¨ kh√¥ng c√≥ transaction
    // html += '<div class="bg-blue-50 p-4 rounded-lg mb-4">';
    // html += '<p class="text-sm text-gray-600 mb-1">M√£ giao d·ªãch:</p>';
    // html += '<p class="font-bold text-blue-600">' + data.transaction_id + "</p>";
    // html += "</div>";

    // Amount
    html += '<div class="bg-green-50 p-4 rounded-lg mb-4">';
    html += '<p class="text-sm text-gray-600 mb-1">S·ªë ti·ªÅn n·∫°p:</p>';
    html +=
        '<p class="font-bold text-green-600 text-lg">' +
        parseInt(data.amount).toLocaleString("vi-VN") +
        "ƒë</p>";
    html +=
        '<p class="text-xs text-gray-500">= ' +
        parseInt(data.amount).toLocaleString("vi-VN") +
        " coins</p>";
    html += "</div>";

    // QR Code
    var qrUrl = data.qr_code || data.qr_url; // Support both field names
    if (qrUrl) {
        html +=
            '<div class="text-center mb-4 bg-white p-6 rounded-lg shadow-inner">';
        html +=
            '<h3 class="text-lg font-bold text-gray-800 mb-4">üéØ Qu√©t m√£ QR ƒë·ªÉ thanh to√°n</h3>';
        html += '<div class="qr-container flex justify-center">';
        html +=
            '<img src="' +
            qrUrl +
            '" alt="QR Code" class="w-80 h-80 border-4 border-blue-500 rounded-xl shadow-2xl" onerror="this.onerror=null; this.src=\'https://via.placeholder.com/320x320.png?text=QR+Loading...\';">';
        html += "</div>";
        html +=
            '<p class="text-sm text-blue-600 mt-4 font-semibold">üì± M·ªü app ng√¢n h√†ng ‚Üí Qu√©t QR ‚Üí X√°c nh·∫≠n</p>';
        html +=
            '<p class="text-xs text-gray-500 mt-2">Giao d·ªãch ƒë∆∞·ª£c x·ª≠ l√Ω t·ª± ƒë·ªông sau khi chuy·ªÉn kho·∫£n</p>';
        html += "</div>";
    } else {
        html +=
            '<div class="bg-red-50 p-4 rounded-lg mb-4 border border-red-200">';
        html +=
            '<p class="text-red-600 font-semibold">‚ö†Ô∏è Kh√¥ng th·ªÉ t·∫°o m√£ QR</p>';
        html +=
            '<p class="text-sm text-red-500">Vui l√≤ng chuy·ªÉn kho·∫£n th·ªß c√¥ng theo th√¥ng tin b√™n d∆∞·ªõi</p>';
        html += "</div>";
    }

    // Bank info
    if (data.bank_info) {
        html +=
            '<div class="bg-yellow-50 p-4 rounded-lg text-sm border-2 border-yellow-400">';
        html +=
            '<h4 class="font-semibold mb-3 text-yellow-800 text-base">üè¶ Ho·∫∑c chuy·ªÉn kho·∫£n th·ªß c√¥ng:</h4>';

        if (data.bank_info.bank_name) {
            html +=
                '<p class="mb-1">Ng√¢n h√†ng: <strong>' +
                data.bank_info.bank_name +
                "</strong></p>";
        }
        if (data.bank_info.account_number) {
            html +=
                '<p class="mb-1">S·ªë TK: <strong>' +
                data.bank_info.account_number +
                "</strong></p>";
        }
        if (data.bank_info.account_name) {
            html +=
                '<p class="mb-3">T√™n TK: <strong>' +
                data.bank_info.account_name +
                "</strong></p>";
        }

        // N·ªôi dung chuy·ªÉn kho·∫£n (quan tr·ªçng nh·∫•t)
        if (data.bank_info.content) {
            html +=
                '<div class="bg-red-50 border-2 border-red-500 p-3 rounded-lg mt-3">';
            html +=
                '<p class="text-red-800 font-bold text-sm mb-1">‚ö†Ô∏è N·ªòI DUNG CHUY·ªÇN KHO·∫¢N:</p>';
            html +=
                '<p class="text-red-600 font-mono text-lg font-bold text-center bg-white p-2 rounded border border-red-300">' +
                data.bank_info.content +
                "</p>";
            html +=
                '<p class="text-xs text-red-700 mt-2 font-semibold">üìù Copy ch√≠nh x√°c n·ªôi dung n√†y khi chuy·ªÉn kho·∫£n</p>';
            html += "</div>";
        }

        html +=
            '<p class="text-xs text-yellow-800 mt-3 font-semibold bg-yellow-100 p-2 rounded">‚ö° H·ªá th·ªëng t·ª± ƒë·ªông c·ªông coins khi nh·∫≠n ƒë∆∞·ª£c chuy·ªÉn kho·∫£n ƒë√∫ng n·ªôi dung</p>';
        html += "</div>";
    }

    html += "</div>";

    // Set HTML and show modal
    paymentInfo.innerHTML = html;
    modal.classList.remove("hidden");

    console.log("‚úÖ Modal displayed!");

    // B·∫Øt ƒë·∫ßu auto-check m·ªói 10 gi√¢y
    startAutoCheck();
}

// T·ª± ƒë·ªông ki·ªÉm tra tr·∫°ng th√°i thanh to√°n
function startAutoCheck() {
    // Clear interval c≈© n·∫øu c√≥
    if (autoCheckInterval) {
        clearInterval(autoCheckInterval);
    }

    console.log("üîÑ Starting auto-check every 10 seconds...");

    autoCheckInterval = setInterval(function () {
        console.log("üîç Auto-checking payment status...");

        fetch("/api/payment/status", {
            method: "GET",
            headers: {
                "Content-Type": "application/json",
                Accept: "application/json",
            },
        })
            .then(function (response) {
                return response.json();
            })
            .then(function (data) {
                console.log("Auto-check response:", data);

                if (data.success) {
                    var currentCoins = data.coins || 0;
                    console.log(
                        "Comparing: current=" +
                            currentCoins +
                            " vs initial=" +
                            initialCoins
                    );

                    // N·∫øu coins tƒÉng = ƒë√£ nh·∫≠n ti·ªÅn
                    if (currentCoins > initialCoins) {
                        var addedCoins = currentCoins - initialCoins;

                        // Stop auto-check
                        clearInterval(autoCheckInterval);
                        autoCheckInterval = null;

                        console.log(
                            "‚úÖ Payment completed! Added " +
                                addedCoins +
                                " coins. Auto-reload..."
                        );

                        // ƒê√≥ng modal
                        var modal = document.getElementById("paymentModal");
                        if (modal) {
                            modal.classList.add("hidden");
                        }

                        // Show alert v√† reload
                        alert(
                            "‚úÖ Thanh to√°n th√†nh c√¥ng!\nüí∞ ƒê√£ c·ªông " +
                                addedCoins.toLocaleString("vi-VN") +
                                " coins v√†o t√†i kho·∫£n.\n\nTrang s·∫Ω ƒë∆∞·ª£c t·∫£i l·∫°i."
                        );

                        window.location.reload();
                    } else {
                        console.log(
                            "‚è≥ Waiting for payment... (coins unchanged)"
                        );
                    }
                }
            })
            .catch(function (error) {
                console.error("Auto-check error:", error);
            });
    }, 10000); // Check every 10 seconds
}

// D·ª´ng auto-check khi ƒë√≥ng modal
function stopAutoCheck() {
    if (autoCheckInterval) {
        clearInterval(autoCheckInterval);
        autoCheckInterval = null;
        console.log("‚èπÔ∏è Stopped auto-check");
    }
}

// Check payment status function - So s√°nh coins ƒë·ªÉ bi·∫øt ƒë√£ nh·∫≠n ti·ªÅn ch∆∞a
function checkPaymentStatus() {
    console.log("üîç Checking payment status (comparing coins)");
    console.log("Initial coins:", initialCoins);

    var checkBtn = document.getElementById("checkPaymentBtn");
    if (checkBtn) {
        checkBtn.disabled = true;
        checkBtn.textContent = "ƒêang ki·ªÉm tra...";
    }

    fetch("/api/payment/status", {
        method: "GET",
        headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
        },
    })
        .then(function (response) {
            return response.json();
        })
        .then(function (data) {
            console.log("Status response:", data);
            console.log("Current coins:", data.coins);
            console.log("Initial coins:", initialCoins);

            if (checkBtn) {
                checkBtn.disabled = false;
                checkBtn.textContent = "üîÑ Ki·ªÉm tra thanh to√°n";
            }

            if (data.success) {
                var currentCoins = data.coins || 0;

                // So s√°nh: n·∫øu coins tƒÉng = ƒë√£ nh·∫≠n ti·ªÅn
                if (currentCoins > initialCoins) {
                    var addedCoins = currentCoins - initialCoins;
                    console.log("‚úÖ Payment completed! Added:", addedCoins);

                    // D·ª´ng auto-check
                    stopAutoCheck();

                    // ƒê√≥ng modal
                    var modal = document.getElementById("paymentModal");
                    if (modal) {
                        modal.classList.add("hidden");
                    }

                    // Hi·ªÉn th·ªã th√¥ng b√°o v√† reload
                    alert(
                        "‚úÖ Thanh to√°n th√†nh c√¥ng!\nüí∞ ƒê√£ c·ªông " +
                            addedCoins.toLocaleString("vi-VN") +
                            " coins v√†o t√†i kho·∫£n.\n\nTrang s·∫Ω ƒë∆∞·ª£c t·∫£i l·∫°i."
                    );

                    // Reload
                    window.location.reload();
                } else {
                    console.log("‚è≥ No payment received yet");
                    alert(
                        "‚è≥ Ch∆∞a nh·∫≠n ƒë∆∞·ª£c thanh to√°n.\n\nVui l√≤ng qu√©t m√£ QR ho·∫∑c chuy·ªÉn kho·∫£n theo th√¥ng tin ƒë√£ cung c·∫•p."
                    );
                }
            } else {
                alert(
                    "‚ùå Kh√¥ng th·ªÉ ki·ªÉm tra tr·∫°ng th√°i.\n" + (data.message || "")
                );
            }
        })
        .catch(function (error) {
            console.error("Error:", error);
            if (checkBtn) {
                checkBtn.disabled = false;
                checkBtn.textContent = "üîÑ Ki·ªÉm tra thanh to√°n";
            }
            alert("C√≥ l·ªói x·∫£y ra khi ki·ªÉm tra: " + error.message);
        });
}

// Close modal button handler
document.addEventListener("DOMContentLoaded", function () {
    var closeBtn = document.getElementById("closeModalBtn");
    var checkBtn = document.getElementById("checkPaymentBtn");
    var modal = document.getElementById("paymentModal");

    if (closeBtn && modal) {
        closeBtn.onclick = function () {
            stopAutoCheck(); // D·ª´ng auto-check khi ƒë√≥ng modal
            modal.classList.add("hidden");
        };

        // Close when clicking outside
        modal.onclick = function (e) {
            if (e.target === modal) {
                stopAutoCheck(); // D·ª´ng auto-check khi ƒë√≥ng modal
                modal.classList.add("hidden");
            }
        };
    }

    if (checkBtn) {
        checkBtn.onclick = checkPaymentStatus;
    }
});
